<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	   http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- SURF: required infrastructure imports -->
	<import resource="surf-config.xml"/>

	<!-- Maps requests to @Controllers based on @RequestMapping("path") annotation values
		 If no annotation-based path mapping is found, Spring MVC sends a 404 response and logs a pageNotFound warning. -->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
		<property name="order" value="1" />

		<!-- SURF: required interceptors -->
        <property name="interceptors">
            <list>
            	<ref bean="requestContextInterceptor"/>
            	<ref bean="themeInterceptor"/>
            </list>
        </property>
	</bean>

    <bean id="presets.persister" class="org.springframework.extensions.surf.persister.StoreObjectPersister" parent="webframework.sitedata.persister.abstract">
	    <property name="store" ref="presets.store" />
		<property name="pathPrefix"><value>/</value></property>
	</bean>
	<bean id="presets.store" class="org.springframework.extensions.webscripts.LocalFileSystemStore">
	    <property name="root"><value>./WEB-INF</value></property>
		<property name="path"><value>/presetConstructs</value></property>
	</bean>
   
    <bean id="webframework.service.persister" class="org.springframework.extensions.surf.persister.PersisterService" init-method="init">
       <property name="webFrameworkConfig" ref="webframework.config.element" />
       <property name="autowireService"  ref="webframework.service.autowire"/>       
       <property name="persisters">
           <list>
               <!-- The default persister added to the default persister service. This is done to 
                    satisfy the legacy requirement of the Alresco Share which would define the
                    same persister through the default Surf object type configuration. -->
               <ref bean="webframework.objects.persister"/>
			   <ref bean="presets.persister" />
           </list>
       </property>
    </bean>
</beans>
